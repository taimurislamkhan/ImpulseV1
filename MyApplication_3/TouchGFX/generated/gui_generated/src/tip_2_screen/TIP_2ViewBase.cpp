/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/tip_2_screen/TIP_2ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

TIP_2ViewBase::TIP_2ViewBase() :
    flexButtonCallback(this, &TIP_2ViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &TIP_2ViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_1024X600_RAYS_ID));
    add(image1);

    box1.setWidth(800);
    box1.setHeight(83);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1.setAlpha(25);
    add(box1);

    button1_1.setXY(18, 16);
    button1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button1_1.setAlpha(0);
    add(button1_1);

    box1_1_1.setPosition(14, 15, 772, 450);
    box1_1_1.setColor(touchgfx::Color::getColorFromRGB(36, 35, 35));
    box1_1_1.setAlpha(100);
    add(box1_1_1);

    Tip_2_Energy.setPosition(148, 267, 118, 49);
    Tip_2_Energy.setColor(touchgfx::Color::getColorFromRGB(250, 162, 0));
    Tip_2_Energy.setLinespacing(0);
    Unicode::snprintf(Tip_2_EnergyBuffer, TIP_2_ENERGY_SIZE, "%s", touchgfx::TypedText(T_3).getText());
    Tip_2_Energy.setWildcard(Tip_2_EnergyBuffer);
    Tip_2_Energy.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VZXK));
    add(Tip_2_Energy);

    image3_1.setXY(159, 339);
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_EXPAND_MORE_50_50_C7C7C7_SVG_ID));
    add(image3_1);

    image3.setXY(159, 201);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_EXPAND_LESS_50_50_C7C7C7_SVG_ID));
    add(image3);

    image3_2.setXY(577, 201);
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_EXPAND_LESS_50_50_C7C7C7_SVG_ID));
    add(image3_2);

    image3_1_1.setXY(576, 339);
    image3_1_1.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_EXPAND_MORE_50_50_C7C7C7_SVG_ID));
    add(image3_1_1);

    Tip_2_Distance.setPosition(524, 267, 157, 49);
    Tip_2_Distance.setColor(touchgfx::Color::getColorFromRGB(250, 162, 0));
    Tip_2_Distance.setLinespacing(0);
    Unicode::snprintf(Tip_2_DistanceBuffer, TIP_2_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WX9Y).getText());
    Tip_2_Distance.setWildcard(Tip_2_DistanceBuffer);
    Tip_2_Distance.setTypedText(touchgfx::TypedText(T___SINGLEUSE_35BE));
    add(Tip_2_Distance);

    button1_1_1.setXY(15, 16);
    button1_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button1_1_1.setAlpha(0);
    add(button1_1_1);

    textArea2_1.setXY(521, 139);
    textArea2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_1.setLinespacing(0);
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MNYB));
    add(textArea2_1);

    textArea2_1_2.setXY(340, 27);
    textArea2_1_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_1_2.setLinespacing(0);
    textArea2_1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6R70));
    add(textArea2_1_2);

    textArea2_1_1.setXY(116, 139);
    textArea2_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_1_1.setLinespacing(0);
    textArea2_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_02NP));
    add(textArea2_1_1);

    image4.setXY(721, 26);
    image4.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_CLEAR_50_50_FFFFFF_SVG_ID));
    add(image4);

    flexButton1.setBoxWithBorderPosition(0, 0, 81, 74);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setAlpha(0);
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(705, 15, 81, 74);
    add(flexButton1);

    line1.setPosition(393, 124, 18, 334);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(5, 310);
    line1.setLineWidth(4);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    line1.setAlpha(154);
    add(line1);

    Tip_2_Enable.setXY(30, 27);
    Tip_2_Enable.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUNDED_TEXT_ON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUNDED_TEXT_OFF_NORMAL_ID));
    Tip_2_Enable.setAction(buttonCallback);
    add(Tip_2_Enable);

    Tip_2_Energy_Up.setBoxWithBorderPosition(0, 0, 240, 120);
    Tip_2_Energy_Up.setBorderSize(5);
    Tip_2_Energy_Up.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Tip_2_Energy_Up.setAlpha(0);
    Tip_2_Energy_Up.setPosition(67, 141, 240, 120);
    add(Tip_2_Energy_Up);

    Tip_2_Distance_Down.setBoxWithBorderPosition(0, 0, 233, 113);
    Tip_2_Distance_Down.setBorderSize(5);
    Tip_2_Distance_Down.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Tip_2_Distance_Down.setAlpha(0);
    Tip_2_Distance_Down.setPosition(488, 339, 233, 113);
    add(Tip_2_Distance_Down);

    Tip_2_Energy_Down.setBoxWithBorderPosition(0, 0, 240, 120);
    Tip_2_Energy_Down.setBorderSize(5);
    Tip_2_Energy_Down.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Tip_2_Energy_Down.setAlpha(0);
    Tip_2_Energy_Down.setPosition(67, 332, 240, 120);
    add(Tip_2_Energy_Down);

    Tip_2_Distance_Up.setBoxWithBorderPosition(0, 0, 233, 113);
    Tip_2_Distance_Up.setBorderSize(5);
    Tip_2_Distance_Up.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Tip_2_Distance_Up.setAlpha(0);
    Tip_2_Distance_Up.setPosition(486, 141, 233, 113);
    add(Tip_2_Distance_Up);
}

TIP_2ViewBase::~TIP_2ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void TIP_2ViewBase::setupScreen()
{

}

void TIP_2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to SETTINGS
        //Go to SETTINGS with no screen transition
        application().gotoSETTINGSScreenNoTransition();
    }
}

void TIP_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Tip_2_Enable)
    {
        //Interaction3
        //When Tip_2_Enable clicked call virtual function
        //Call Tip_2_Pressed
        Tip_2_Pressed();
    }
}
