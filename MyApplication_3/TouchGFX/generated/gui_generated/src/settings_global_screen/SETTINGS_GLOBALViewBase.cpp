/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settings_global_screen/SETTINGS_GLOBALViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

SETTINGS_GLOBALViewBase::SETTINGS_GLOBALViewBase() :
    flexButtonCallback(this, &SETTINGS_GLOBALViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &SETTINGS_GLOBALViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &SETTINGS_GLOBALViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_1024X600_RAYS_ID));
    add(image1_1);

    image2.setXY(731, 16);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_FILLED_50_50_BDB5B5_SVG_ID));
    add(image2);

    HOME_BANNER_BG.setPosition(0, 83, 800, 37);
    HOME_BANNER_BG.setColor(touchgfx::Color::getColorFromRGB(0, 21, 255));
    HOME_BANNER_BG.setBorderColor(touchgfx::Color::getColorFromRGB(133, 133, 133));
    HOME_BANNER_BG.setBorderSize(4);
    HOME_BANNER_BG.setAlpha(116);
    add(HOME_BANNER_BG);

    HOME_BANNER.setPosition(9, 89, 781, 31);
    HOME_BANNER.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    HOME_BANNER.setLinespacing(0);
    Unicode::snprintf(HOME_BANNERBuffer, HOME_BANNER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Q07G).getText());
    HOME_BANNER.setWildcard(HOME_BANNERBuffer);
    HOME_BANNER.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DIAP));
    add(HOME_BANNER);

    textArea1_1.setXY(261, 17);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KVWT));
    add(textArea1_1);

    box1_1.setWidth(800);
    box1_1.setHeight(83);
    box1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1_1.setAlpha(25);
    add(box1_1);

    HOME_SETTINGS.setBoxWithBorderPosition(0, 0, 86, 83);
    HOME_SETTINGS.setBorderSize(5);
    HOME_SETTINGS.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    HOME_SETTINGS.setAlpha(0);
    HOME_SETTINGS.setAction(flexButtonCallback);
    HOME_SETTINGS.setPosition(713, 0, 86, 83);
    add(HOME_SETTINGS);

    textArea1_2.setXY(24, 367);
    textArea1_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2.setLinespacing(0);
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OU9M));
    add(textArea1_2);

    textArea1.setXY(24, 305);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PI2W));
    add(textArea1);

    ENCODER_BYPASS_TOGGLE.setXY(633, 293);
    ENCODER_BYPASS_TOGGLE.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_OFF_NORMAL_ID));
    ENCODER_BYPASS_TOGGLE.forceState(true);
    ENCODER_BYPASS_TOGGLE.setAction(buttonCallback);
    add(ENCODER_BYPASS_TOGGLE);

    textArea1_2_2_1.setXY(24, 426);
    textArea1_2_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_2_1.setLinespacing(0);
    textArea1_2_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BZ2L));
    add(textArea1_2_2_1);

    textArea1_2_2.setXY(24, 160);
    textArea1_2_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_2.setLinespacing(0);
    textArea1_2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3YQ));
    add(textArea1_2_2);

    PREHEAT_DISTANCE_SLIDER_VAL.setPosition(369, 230, 79, 27);
    PREHEAT_DISTANCE_SLIDER_VAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    PREHEAT_DISTANCE_SLIDER_VAL.setLinespacing(0);
    Unicode::snprintf(PREHEAT_DISTANCE_SLIDER_VALBuffer, PREHEAT_DISTANCE_SLIDER_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XU89).getText());
    PREHEAT_DISTANCE_SLIDER_VAL.setWildcard(PREHEAT_DISTANCE_SLIDER_VALBuffer);
    PREHEAT_DISTANCE_SLIDER_VAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z4AO));
    add(PREHEAT_DISTANCE_SLIDER_VAL);

    textArea1_2_2_2_1.setXY(510, 200);
    textArea1_2_2_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_2_2_1.setLinespacing(0);
    textArea1_2_2_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2DKM));
    add(textArea1_2_2_2_1);

    PREHEAT_DISTANCE_SLIDER.setXY(458, 225);
    PREHEAT_DISTANCE_SLIDER.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_LIGHT_ID));
    PREHEAT_DISTANCE_SLIDER.setupHorizontalSlider(16, 11, 0, 0, 300);
    PREHEAT_DISTANCE_SLIDER.setValueRange(0, 25);
    PREHEAT_DISTANCE_SLIDER.setValue(12);
    add(PREHEAT_DISTANCE_SLIDER);

    PLATEN_SPEED_CURVE_SLIDER.setXY(458, 423);
    PLATEN_SPEED_CURVE_SLIDER.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_LIGHT_ID));
    PLATEN_SPEED_CURVE_SLIDER.setupHorizontalSlider(16, 11, 0, 0, 300);
    PLATEN_SPEED_CURVE_SLIDER.setValueRange(25, 100);
    PLATEN_SPEED_CURVE_SLIDER.setValue(25);
    PLATEN_SPEED_CURVE_SLIDER.setNewValueCallback(sliderValueChangedCallback);
    add(PLATEN_SPEED_CURVE_SLIDER);

    PREHEAT_ENERGY_SLIDER.setXY(458, 155);
    PREHEAT_ENERGY_SLIDER.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_LIGHT_ID));
    PREHEAT_ENERGY_SLIDER.setupHorizontalSlider(16, 11, 0, 0, 300);
    PREHEAT_ENERGY_SLIDER.setValueRange(10, 50);
    PREHEAT_ENERGY_SLIDER.setValue(25);
    PREHEAT_ENERGY_SLIDER.setNewValueCallback(sliderValueChangedCallback);
    add(PREHEAT_ENERGY_SLIDER);

    BOSS_HEIGHT_SLIDER.setXY(458, 364);
    BOSS_HEIGHT_SLIDER.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_LIGHT_ID));
    BOSS_HEIGHT_SLIDER.setupHorizontalSlider(16, 11, 0, 0, 300);
    BOSS_HEIGHT_SLIDER.setValueRange(25, 100);
    BOSS_HEIGHT_SLIDER.setValue(25);
    BOSS_HEIGHT_SLIDER.setNewValueCallback(sliderValueChangedCallback);
    add(BOSS_HEIGHT_SLIDER);

    SPEED_CURVE_SLIDER_VAL.setPosition(364, 428, 79, 27);
    SPEED_CURVE_SLIDER_VAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SPEED_CURVE_SLIDER_VAL.setLinespacing(0);
    Unicode::snprintf(SPEED_CURVE_SLIDER_VALBuffer, SPEED_CURVE_SLIDER_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2AFH).getText());
    SPEED_CURVE_SLIDER_VAL.setWildcard(SPEED_CURVE_SLIDER_VALBuffer);
    SPEED_CURVE_SLIDER_VAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T86C));
    add(SPEED_CURVE_SLIDER_VAL);

    textArea1_2_2_2.setXY(579, 130);
    textArea1_2_2_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_2_2.setLinespacing(0);
    textArea1_2_2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7881));
    add(textArea1_2_2_2);

    PREHEAT_ENERGY_SLIDER_VAL.setPosition(369, 160, 79, 27);
    PREHEAT_ENERGY_SLIDER_VAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    PREHEAT_ENERGY_SLIDER_VAL.setLinespacing(0);
    Unicode::snprintf(PREHEAT_ENERGY_SLIDER_VALBuffer, PREHEAT_ENERGY_SLIDER_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QQFR).getText());
    PREHEAT_ENERGY_SLIDER_VAL.setWildcard(PREHEAT_ENERGY_SLIDER_VALBuffer);
    PREHEAT_ENERGY_SLIDER_VAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1RUQ));
    add(PREHEAT_ENERGY_SLIDER_VAL);

    BOSS_HEIGHT_SLIDER_VAL.setPosition(350, 367, 98, 27);
    BOSS_HEIGHT_SLIDER_VAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    BOSS_HEIGHT_SLIDER_VAL.setLinespacing(0);
    Unicode::snprintf(BOSS_HEIGHT_SLIDER_VALBuffer, BOSS_HEIGHT_SLIDER_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NQJY).getText());
    BOSS_HEIGHT_SLIDER_VAL.setWildcard(BOSS_HEIGHT_SLIDER_VALBuffer);
    BOSS_HEIGHT_SLIDER_VAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GY9));
    add(BOSS_HEIGHT_SLIDER_VAL);

    PREHEAT_TOGGLE.setXY(148, 148);
    PREHEAT_TOGGLE.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_OFF_NORMAL_ID));
    PREHEAT_TOGGLE.forceState(true);
    PREHEAT_TOGGLE.setAction(buttonCallback);
    add(PREHEAT_TOGGLE);
}

SETTINGS_GLOBALViewBase::~SETTINGS_GLOBALViewBase()
{

}

void SETTINGS_GLOBALViewBase::setupScreen()
{

}

void SETTINGS_GLOBALViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &HOME_SETTINGS)
    {
        //Interaction1
        //When HOME_SETTINGS clicked change screen to HOME
        //Go to HOME with no screen transition
        application().gotoHOMEScreenNoTransition();
    }
}

void SETTINGS_GLOBALViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ENCODER_BYPASS_TOGGLE)
    {
        //encoder_bypass_toggled
        //When ENCODER_BYPASS_TOGGLE clicked call virtual function
        //Call encoder_bypass_clicked
        encoder_bypass_clicked();
    }
    if (&src == &PREHEAT_TOGGLE)
    {
        //Preheat_Enable_Pressed
        //When PREHEAT_TOGGLE clicked call virtual function
        //Call PREHEAT_ENABLE_PRESSED
        PREHEAT_ENABLE_PRESSED();
    }
}

void SETTINGS_GLOBALViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &BOSS_HEIGHT_SLIDER)
    {
        //BOSS_HEIGHT_SLIDER_CHANGE
        //When BOSS_HEIGHT_SLIDER value changed call virtual function
        //Call BOSS_HEIGHT_SLIDER_CHANGED
        BOSS_HEIGHT_SLIDER_CHANGED(value);
    }
    if (&src == &PREHEAT_ENERGY_SLIDER)
    {
        //PREHEAT_SLIDER_CHANGE
        //When PREHEAT_ENERGY_SLIDER value changed call virtual function
        //Call PREHEAT_SLIDER_CHANGED
        PREHEAT_SLIDER_CHANGED(value);
    }
    if (&src == &PLATEN_SPEED_CURVE_SLIDER)
    {
        //PLATEN_SPEED_CURVE_CHANGE
        //When PLATEN_SPEED_CURVE_SLIDER value changed call virtual function
        //Call PLATEN_SPEED_CURVE_CHANGED
        PLATEN_SPEED_CURVE_CHANGED(value);
    }
}
