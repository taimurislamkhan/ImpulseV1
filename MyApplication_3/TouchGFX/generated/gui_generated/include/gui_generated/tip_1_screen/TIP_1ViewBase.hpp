/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TIP_1VIEWBASE_HPP
#define TIP_1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/tip_1_screen/TIP_1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>

class TIP_1ViewBase : public touchgfx::View<TIP_1Presenter>
{
public:
    TIP_1ViewBase();
    virtual ~TIP_1ViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void Tip_1_Pressed()
    {
        // Override and implement this function in TIP_1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Box box1;
    touchgfx::Button button1_1;
    touchgfx::Box box1_1_1;
    touchgfx::TextAreaWithOneWildcard Tip_1_Energy;
    touchgfx::Image image3_1;
    touchgfx::Image image3;
    touchgfx::Image image3_2;
    touchgfx::Image image3_1_1;
    touchgfx::TextAreaWithOneWildcard Tip_1_Distance;
    touchgfx::Button button1_1_1;
    touchgfx::TextArea textArea2_1;
    touchgfx::TextArea textArea2_1_2;
    touchgfx::TextArea textArea2_1_1;
    touchgfx::Image image4;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton1;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::ToggleButton Tip_1_Enable;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  Tip_1_Energy_Up;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  Tip_1_Distance_Down;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  Tip_1_Energy_Down;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  Tip_1_Distance_Up;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TIP_1_ENERGY_SIZE = 10;
    touchgfx::Unicode::UnicodeChar Tip_1_EnergyBuffer[TIP_1_ENERGY_SIZE];
    static const uint16_t TIP_1_DISTANCE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar Tip_1_DistanceBuffer[TIP_1_DISTANCE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TIP_1ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<TIP_1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // TIP_1VIEWBASE_HPP
